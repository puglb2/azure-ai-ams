name: Azure Static Web Apps CI/CD
on:
  push: { branches: [ main ] }
  pull_request: { types: [opened, synchronize, reopened, closed], branches: [ main ] }

env:
  APP_LOCATION: "."      # "/" for repo root; or "web" if your frontend is in ./web
  API_LOCATION: "api"    # "" if you don't have Functions
  OUTPUT_LOCATION: "dist"

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # PROBE: shows what Oryx will inspect
      - name: Probe layout (what Oryx will inspect)
        run: |
          echo "app_location => ${{ env.APP_LOCATION }}"
          ls -la "${{ env.APP_LOCATION }}" || true
          echo "--- package.json ---"
          sed -n '1,160p' "${{ env.APP_LOCATION }}/package.json" || echo "NO package.json"
          echo "api_location => ${{ env.API_LOCATION }}"
          ls -la "${{ env.API_LOCATION }}" || true
          echo "--- host.json ---"
          sed -n '1,160p' "${{ env.API_LOCATION }}/host.json" || echo "NO host.json"
          echo "--- function.json files ---"
          find "${{ env.API_LOCATION }}" -maxdepth 2 -name function.json -print || echo "NO function.json found"

      - name: Build & Deploy (Oryx)
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          api_location: ${{ env.API_LOCATION }}
          # Make it explicit so Oryx runs npm + build:
          app_build_command: "npm install && npm run build"
